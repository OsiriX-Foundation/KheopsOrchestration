apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
  namespace: postgres-operator
data:
  kheops-realm.json: |-
    {
      "id" : "kheops",
      "realm" : "kheops",
      "notBefore" : 0,
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "enabled" : true,
      "sslRequired" : "none",
      "registrationAllowed" : true,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [
          {
            "id" : "4030de45-9732-406c-b232-94f8e5091cfd",
            "name" : "uma_authorization",
            "description" : "${role_uma_authorization}",
            "composite" : false,
            "clientRole" : false,
            "containerId" : "kheops",
            "attributes" : {}
          },
          {
            "id" : "ba7154e4-d53e-47b1-81d7-804451b66d33",
            "name" : "offline_access",
            "description" : "${role_offline-access}",
            "composite" : false,
            "clientRole" : false,
            "containerId" : "kheops",
            "attributes" : {}
          }
        ],
        "client" : {
          "realm-management" : [
            {
              "id" : "b29e5dbb-0afb-4543-b95e-b09fed54dccd",
              "name" : "view-users",
              "description" : "${role_view-users}",
              "composite" : true,
              "composites" : {
                "client" : {
                  "realm-management" : [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "748112d8-2e3a-438f-8bcc-bd880f00bb74",
              "name" : "manage-realm",
              "description" : "${role_manage-realm}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "1e7d024e-fc04-45d9-9117-383478d252ed",
              "name" : "manage-authorization",
              "description" : "${role_manage-authorization}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "e0268c5b-5527-4a89-a92c-14c77366c315",
              "name" : "view-authorization",
              "description" : "${role_view-authorization}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "6bb011dc-7726-44cc-82dc-11d68e777013",
              "name" : "view-realm",
              "description" : "${role_view-realm}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "7585b891-1cfe-4cd9-8e02-2d58a6545092",
              "name" : "impersonation",
              "description" : "${role_impersonation}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "c67a7cc2-de2f-44ff-bf65-e45886f24042",
              "name" : "view-clients",
              "description" : "${role_view-clients}",
              "composite" : true,
              "composites" : {
                "client" : {
                  "realm-management" : [
                    "query-clients"
                  ]
                }
              },
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "59bb7c57-e7e6-4c6c-8b1f-1aed668415b8",
              "name" : "manage-identity-providers",
              "description" : "${role_manage-identity-providers}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "fd5108fd-f93f-446a-875b-777b668ad014",
              "name" : "query-realms",
              "description" : "${role_query-realms}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "73ca5c67-5a7a-4e8f-8b86-c8a0a6658e53",
              "name" : "view-identity-providers",
              "description" : "${role_view-identity-providers}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "3737b86e-0aa1-432d-9c83-97c98c87c93c",
              "name" : "manage-clients",
              "description" : "${role_manage-clients}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "ea933241-6392-4d86-bafa-192f8bc618a6",
              "name" : "query-groups",
              "description" : "${role_query-groups}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "89f26f09-30f6-4a13-a191-a561e5058171",
              "name" : "manage-users",
              "description" : "${role_manage-users}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "1c8eb708-f4f3-4be3-b48d-13f5cb246a6e",
              "name" : "view-events",
              "description" : "${role_view-events}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "15522c8f-4101-4ffd-9efc-0deaa1c0cdf6",
              "name" : "realm-admin",
              "description" : "${role_realm-admin}",
              "composite" : true,
              "composites" : {
                "client" : {
                  "realm-management" : [
                    "view-users",
                    "manage-realm",
                    "manage-authorization",
                    "view-authorization",
                    "view-realm",
                    "impersonation",
                    "view-clients",
                    "manage-identity-providers",
                    "query-realms",
                    "view-identity-providers",
                    "manage-clients",
                    "query-groups",
                    "manage-users",
                    "view-events",
                    "query-users",
                    "query-clients",
                    "manage-events",
                    "create-client"
                  ]
                }
              },
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "4861951e-8cb2-4874-a9ef-fa663290a084",
              "name" : "query-users",
              "description" : "${role_query-users}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "6ad9592a-eb21-49a4-b78b-9bed60985f31",
              "name" : "query-clients",
              "description" : "${role_query-clients}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "7d331785-5260-4c4b-9616-13a1d60b2c82",
              "name" : "manage-events",
              "description" : "${role_manage-events}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            },
            {
              "id" : "bfd4e59e-1e03-4cba-af6d-8ce755a95062",
              "name" : "create-client",
              "description" : "${role_create-client}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
              "attributes" : {}
            }
          ],
          "loginConnect" : [],
          "security-admin-console" : [],
          "admin-cli" : [],
          "account-console" : [],
          "broker" : [
            {
              "id" : "80eaccb7-6d65-4f49-b36a-937f3d1c3b73",
              "name" : "read-token",
              "description" : "${role_read-token}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "59e2e997-29d5-4a81-83c9-743910624b01",
              "attributes" : {}
            }
          ],
          "account" : [
            {
              "id" : "243eeb01-5500-4a7f-8342-ba5dc77c2abc",
              "name" : "view-profile",
              "description" : "${role_view-profile}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            },
            {
              "id" : "d8fb782f-5fe9-4d14-a106-597f9ec8e69f",
              "name" : "view-applications",
              "description" : "${role_view-applications}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            },
            {
              "id" : "1c772932-4e21-4fc6-91f1-1d28137b2865",
              "name" : "manage-consent",
              "description" : "${role_manage-consent}",
              "composite" : true,
              "composites" : {
                "client" : {
                  "account" : [
                    "view-consent"
                  ]
                }
              },
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            },
            {
              "id" : "4ba5cbdf-9e29-45c4-80e4-b3a86d4c4f0d",
              "name" : "delete-account",
              "description" : "${role_delete-account}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            },
            {
              "id" : "16533de0-10b5-404f-a6e4-22aab5be31e6",
              "name" : "view-consent",
              "description" : "${role_view-consent}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            },
            {
              "id" : "7e9842b6-bd7f-4adf-9a1f-e5568c5cf489",
              "name" : "manage-account-links",
              "description" : "${role_manage-account-links}",
              "composite" : false,
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            },
            {
              "id" : "ee043c81-5faf-4f60-b386-653686b61428",
              "name" : "manage-account",
              "description" : "${role_manage-account}",
              "composite" : true,
              "composites" : {
                "client" : {
                  "account" : [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole" : true,
              "containerId" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
              "attributes" : {}
            }
          ]
        }
      },
      "groups" : [],
      "defaultRoles" : [
        "uma_authorization",
        "offline_access"
      ],
      "requiredCredentials" : [
        "password"
      ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpSupportedApplications" : [
        "FreeOTP",
        "Google Authenticator"
      ],
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [
        "ES256"
      ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [],
      "scopeMappings" : [
        {
          "clientScope" : "offline_access",
          "roles" : [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings" : {
        "account" : [
          {
            "client" : "account-console",
            "roles" : [
              "manage-account"
            ]
          }
        ]
      },
      "clients" : [
        {
          "id" : "0cf15b0d-9523-4a9d-af58-1e4bb3ef510f",
          "clientId" : "account",
          "name" : "${client_account}",
          "rootUrl" : "${authBaseUrl}",
          "baseUrl" : "/realms/kheops/account/",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "defaultRoles" : [
            "view-profile",
            "manage-account"
          ],
          "redirectUris" : [
            "/realms/kheops/account/*"
          ],
          "webOrigins" : [],
          "notBefore" : 0,
          "bearerOnly" : false,
          "consentRequired" : false,
          "standardFlowEnabled" : true,
          "implicitFlowEnabled" : false,
          "directAccessGrantsEnabled" : false,
          "serviceAccountsEnabled" : false,
          "publicClient" : false,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {},
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : false,
          "nodeReRegistrationTimeout" : 0,
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id" : "4f0b6341-dfbd-4f2e-b683-e2220f5f6c14",
          "clientId" : "account-console",
          "name" : "${client_account-console}",
          "rootUrl" : "${authBaseUrl}",
          "baseUrl" : "/realms/kheops/account/",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "redirectUris" : [
            "/realms/kheops/account/*"
          ],
          "webOrigins" : [],
          "notBefore" : 0,
          "bearerOnly" : false,
          "consentRequired" : false,
          "standardFlowEnabled" : true,
          "implicitFlowEnabled" : false,
          "directAccessGrantsEnabled" : false,
          "serviceAccountsEnabled" : false,
          "publicClient" : true,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {
            "pkce.code.challenge.method" : "S256"
          },
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : false,
          "nodeReRegistrationTimeout" : 0,
          "protocolMappers" : [
            {
              "id" : "b2b7d773-cc7d-4ce1-9919-fb9e9ccdfbe0",
              "name" : "audience resolve",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-audience-resolve-mapper",
              "consentRequired" : false,
              "config" : {}
            }
          ],
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id" : "6e5b84c4-ae1d-4fd3-91cf-80c4bf2c31f3",
          "clientId" : "admin-cli",
          "name" : "${client_admin-cli}",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "redirectUris" : [],
          "webOrigins" : [],
          "notBefore" : 0,
          "bearerOnly" : false,
          "consentRequired" : false,
          "standardFlowEnabled" : false,
          "implicitFlowEnabled" : false,
          "directAccessGrantsEnabled" : true,
          "serviceAccountsEnabled" : false,
          "publicClient" : true,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {},
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : false,
          "nodeReRegistrationTimeout" : 0,
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id" : "59e2e997-29d5-4a81-83c9-743910624b01",
          "clientId" : "broker",
          "name" : "${client_broker}",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "redirectUris" : [],
          "webOrigins" : [],
          "notBefore" : 0,
          "bearerOnly" : false,
          "consentRequired" : false,
          "standardFlowEnabled" : true,
          "implicitFlowEnabled" : false,
          "directAccessGrantsEnabled" : false,
          "serviceAccountsEnabled" : false,
          "publicClient" : false,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {},
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : false,
          "nodeReRegistrationTimeout" : 0,
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id" : "3348bfa9-9873-41eb-a0ec-8ad334a37719",
          "clientId" : "loginConnect",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "redirectUris" : [
            "*"
          ],
          "webOrigins" : [
            "*"
          ],
          "notBefore" : 0,
          "bearerOnly" : false,
          "consentRequired" : false,
          "standardFlowEnabled" : true,
          "implicitFlowEnabled" : true,
          "directAccessGrantsEnabled" : true,
          "serviceAccountsEnabled" : false,
          "publicClient" : true,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {
            "saml.assertion.signature" : "false",
            "saml.force.post.binding" : "false",
            "saml.multivalued.roles" : "false",
            "saml.encrypt" : "false",
            "saml.server.signature" : "false",
            "saml.server.signature.keyinfo.ext" : "false",
            "exclude.session.state.from.auth.response" : "false",
            "saml_force_name_id_format" : "false",
            "saml.client.signature" : "false",
            "tls.client.certificate.bound.access.tokens" : "false",
            "saml.authnstatement" : "false",
            "display.on.consent.screen" : "false",
            "saml.onetimeuse.condition" : "false"
          },
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : true,
          "nodeReRegistrationTimeout" : -1,
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "kheops",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id" : "a5dbc13b-f7be-43a3-b6db-356d91b23344",
          "clientId" : "realm-management",
          "name" : "${client_realm-management}",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "redirectUris" : [],
          "webOrigins" : [],
          "notBefore" : 0,
          "bearerOnly" : true,
          "consentRequired" : false,
          "standardFlowEnabled" : true,
          "implicitFlowEnabled" : false,
          "directAccessGrantsEnabled" : false,
          "serviceAccountsEnabled" : false,
          "publicClient" : false,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {},
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : false,
          "nodeReRegistrationTimeout" : 0,
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id" : "91f9f3b6-c88c-4063-a729-b0e847a1fb40",
          "clientId" : "security-admin-console",
          "name" : "${client_security-admin-console}",
          "rootUrl" : "${authAdminUrl}",
          "baseUrl" : "/admin/kheops/console/",
          "surrogateAuthRequired" : false,
          "enabled" : true,
          "alwaysDisplayInConsole" : false,
          "clientAuthenticatorType" : "client-secret",
          "secret" : "**********",
          "redirectUris" : [
            "/admin/kheops/console/*"
          ],
          "webOrigins" : [
            "+"
          ],
          "notBefore" : 0,
          "bearerOnly" : false,
          "consentRequired" : false,
          "standardFlowEnabled" : true,
          "implicitFlowEnabled" : false,
          "directAccessGrantsEnabled" : false,
          "serviceAccountsEnabled" : false,
          "publicClient" : true,
          "frontchannelLogout" : false,
          "protocol" : "openid-connect",
          "attributes" : {
            "pkce.code.challenge.method" : "S256"
          },
          "authenticationFlowBindingOverrides" : {},
          "fullScopeAllowed" : false,
          "nodeReRegistrationTimeout" : 0,
          "protocolMappers" : [
            {
              "id" : "240bda47-46b3-41a4-afca-4ccc46b512b6",
              "name" : "locale",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "locale",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "locale",
                "jsonType.label" : "String"
              }
            }
          ],
          "defaultClientScopes" : [
            "web-origins",
            "role_list",
            "profile",
            "roles",
            "email"
          ],
          "optionalClientScopes" : [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes" : [
        {
          "id" : "2e3e7c0c-68f0-4a5a-b9c2-283551e84c60",
          "name" : "address",
          "description" : "OpenID Connect built-in scope: address",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "true",
            "consent.screen.text" : "${addressScopeConsentText}"
          },
          "protocolMappers" : [
            {
              "id" : "c3d34196-a8a1-4dac-b094-e9c1f9dc0c61",
              "name" : "address",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-address-mapper",
              "consentRequired" : false,
              "config" : {
                "user.attribute.formatted" : "formatted",
                "user.attribute.country" : "country",
                "user.attribute.postal_code" : "postal_code",
                "userinfo.token.claim" : "true",
                "user.attribute.street" : "street",
                "id.token.claim" : "true",
                "user.attribute.region" : "region",
                "access.token.claim" : "true",
                "user.attribute.locality" : "locality"
              }
            }
          ]
        },
        {
          "id" : "2939f746-20f5-441e-9ef0-1406514abf60",
          "name" : "email",
          "description" : "OpenID Connect built-in scope: email",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "true",
            "consent.screen.text" : "${emailScopeConsentText}"
          },
          "protocolMappers" : [
            {
              "id" : "ebe9d2e0-24df-46ef-aed5-7bee0e5c96c7",
              "name" : "email verified",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-property-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "emailVerified",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "email_verified",
                "jsonType.label" : "boolean"
              }
            },
            {
              "id" : "14f8ed5c-d794-40bd-aebf-c521644221ef",
              "name" : "email",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-property-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "email",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "email",
                "jsonType.label" : "String"
              }
            }
          ]
        },
        {
          "id" : "6fb0215f-3124-4d2c-8156-b75c7f89b80d",
          "name" : "kheops",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "true"
          }
        },
        {
          "id" : "01dcbb62-99c9-4411-bfb5-5f6573e154f7",
          "name" : "microprofile-jwt",
          "description" : "Microprofile - JWT built-in scope",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "false"
          },
          "protocolMappers" : [
            {
              "id" : "d89239cc-9324-4c01-af80-44c259c25534",
              "name" : "upn",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-property-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "username",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "upn",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "7cab360d-bfa7-4b17-a245-b79ceddac2a4",
              "name" : "groups",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-realm-role-mapper",
              "consentRequired" : false,
              "config" : {
                "multivalued" : "true",
                "userinfo.token.claim" : "true",
                "user.attribute" : "foo",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "groups",
                "jsonType.label" : "String"
              }
            }
          ]
        },
        {
          "id" : "76b8482e-64a9-46a6-aca5-13cf9633eade",
          "name" : "offline_access",
          "description" : "OpenID Connect built-in scope: offline_access",
          "protocol" : "openid-connect",
          "attributes" : {
            "consent.screen.text" : "${offlineAccessScopeConsentText}",
            "display.on.consent.screen" : "true"
          }
        },
        {
          "id" : "cb7bc4ca-9715-4c57-8d07-fd318a6bf650",
          "name" : "phone",
          "description" : "OpenID Connect built-in scope: phone",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "true",
            "consent.screen.text" : "${phoneScopeConsentText}"
          },
          "protocolMappers" : [
            {
              "id" : "4eb8b44b-9cf7-481a-b407-a6cd92b70d85",
              "name" : "phone number verified",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "phoneNumberVerified",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "phone_number_verified",
                "jsonType.label" : "boolean"
              }
            },
            {
              "id" : "9cd05aa9-f3d3-45ca-80cb-cdfe72938b53",
              "name" : "phone number",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "phoneNumber",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "phone_number",
                "jsonType.label" : "String"
              }
            }
          ]
        },
        {
          "id" : "ae24ea7b-ea97-48ed-8c08-5454801db872",
          "name" : "profile",
          "description" : "OpenID Connect built-in scope: profile",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "true",
            "display.on.consent.screen" : "true",
            "consent.screen.text" : "${profileScopeConsentText}"
          },
          "protocolMappers" : [
            {
              "id" : "ae5b5735-f3b4-4e20-813f-9872f03ce205",
              "name" : "full name",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-full-name-mapper",
              "consentRequired" : false,
              "config" : {
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "userinfo.token.claim" : "true"
              }
            },
            {
              "id" : "83b26b0c-6f00-43fe-8e02-f53c790a0132",
              "name" : "locale",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "locale",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "locale",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "dd7b85e5-87cd-4c5d-a05c-72d4e1d0e5e1",
              "name" : "picture",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "picture",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "picture",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "5978a54b-f5b1-4222-b63c-364576250fde",
              "name" : "gender",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "gender",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "gender",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "d14c10e6-5b71-4abc-bca4-6a89189664b5",
              "name" : "birthdate",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "birthdate",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "birthdate",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "a07ae491-9f06-4288-8ea2-230b5474a0fd",
              "name" : "given name",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-property-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "firstName",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "given_name",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "009dbef8-b353-4110-8450-8f6556ba21f9",
              "name" : "middle name",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "middleName",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "middle_name",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "bd0f6d49-2421-4a89-8d42-2620a673c62c",
              "name" : "family name",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-property-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "lastName",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "family_name",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "ecfc25de-d90e-4053-8ff9-3c9244c52e24",
              "name" : "nickname",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "nickname",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "nickname",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "98cf53e1-ed30-4477-ab44-918299c75fca",
              "name" : "updated at",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "updatedAt",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "updated_at",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "28cd98f6-3fce-4e7f-9685-759934f4344a",
              "name" : "username",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-property-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "username",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "preferred_username",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "664933cf-d8c9-44ed-92cd-67b227ed8779",
              "name" : "profile",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "profile",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "profile",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "cdc32464-28a1-4931-ac5e-c7f33fd0be29",
              "name" : "website",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "website",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "website",
                "jsonType.label" : "String"
              }
            },
            {
              "id" : "116aa794-bd04-46fa-9f8f-40fb7a7acd83",
              "name" : "zoneinfo",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-attribute-mapper",
              "consentRequired" : false,
              "config" : {
                "userinfo.token.claim" : "true",
                "user.attribute" : "zoneinfo",
                "id.token.claim" : "true",
                "access.token.claim" : "true",
                "claim.name" : "zoneinfo",
                "jsonType.label" : "String"
              }
            }
          ]
        },
        {
          "id" : "10d8f021-fe79-4810-8d7b-b61a5cd08922",
          "name" : "role_list",
          "description" : "SAML role list",
          "protocol" : "saml",
          "attributes" : {
            "consent.screen.text" : "${samlRoleListScopeConsentText}",
            "display.on.consent.screen" : "true"
          },
          "protocolMappers" : [
            {
              "id" : "69e8ef9c-07ba-415c-a372-7f2dec7d242c",
              "name" : "role list",
              "protocol" : "saml",
              "protocolMapper" : "saml-role-list-mapper",
              "consentRequired" : false,
              "config" : {
                "single" : "false",
                "attribute.nameformat" : "Basic",
                "attribute.name" : "Role"
              }
            }
          ]
        },
        {
          "id" : "fe1faf29-b6c5-47ff-9b65-2e7d85b9b6d3",
          "name" : "roles",
          "description" : "OpenID Connect scope for add user roles to the access token",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "false",
            "display.on.consent.screen" : "true",
            "consent.screen.text" : "${rolesScopeConsentText}"
          },
          "protocolMappers" : [
            {
              "id" : "64f17987-bd68-4c52-af0d-5727e0dcfba0",
              "name" : "client roles",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-client-role-mapper",
              "consentRequired" : false,
              "config" : {
                "user.attribute" : "foo",
                "access.token.claim" : "true",
                "claim.name" : "resource_access.${client_id}.roles",
                "jsonType.label" : "String",
                "multivalued" : "true"
              }
            },
            {
              "id" : "f20f0ae5-9953-452a-93e7-bd73b6103b87",
              "name" : "realm roles",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-usermodel-realm-role-mapper",
              "consentRequired" : false,
              "config" : {
                "user.attribute" : "foo",
                "access.token.claim" : "true",
                "claim.name" : "realm_access.roles",
                "jsonType.label" : "String",
                "multivalued" : "true"
              }
            },
            {
              "id" : "13ce7b7c-6a2b-4c0f-8186-75fb824a6ec6",
              "name" : "audience resolve",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-audience-resolve-mapper",
              "consentRequired" : false,
              "config" : {}
            }
          ]
        },
        {
          "id" : "23a82087-a99d-4f14-920d-410beb36f598",
          "name" : "web-origins",
          "description" : "OpenID Connect scope for add allowed web origins to the access token",
          "protocol" : "openid-connect",
          "attributes" : {
            "include.in.token.scope" : "false",
            "display.on.consent.screen" : "false",
            "consent.screen.text" : ""
          },
          "protocolMappers" : [
            {
              "id" : "621b46f8-9f48-4c13-9851-82baa1eeec0f",
              "name" : "allowed web origins",
              "protocol" : "openid-connect",
              "protocolMapper" : "oidc-allowed-origins-mapper",
              "consentRequired" : false,
              "config" : {}
            }
          ]
        }
      ],
      "defaultDefaultClientScopes" : [
        "role_list",
        "web-origins",
        "email",
        "profile",
        "roles"
      ],
      "defaultOptionalClientScopes" : [
        "microprofile-jwt",
        "address",
        "offline_access",
        "phone"
      ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : {},
      "loginTheme" : "kheops",
      "eventsEnabled" : false,
      "eventsListeners" : [
        "jboss-logging"
      ],
      "enabledEventTypes" : [],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [],
      "identityProviderMappers" : [],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [
          {
            "id" : "ee71cd8d-1490-45c0-bd3c-85e4de1977cf",
            "name" : "Trusted Hosts",
            "providerId" : "trusted-hosts",
            "subType" : "anonymous",
            "subComponents" : {},
            "config" : {
              "host-sending-registration-request-must-match" : [
                "true"
              ],
              "client-uris-must-match" : [
                "true"
              ]
            }
          },
          {
            "id" : "99d146f7-73b1-4613-bb85-2124b5833a4b",
            "name" : "Allowed Protocol Mapper Types",
            "providerId" : "allowed-protocol-mappers",
            "subType" : "authenticated",
            "subComponents" : {},
            "config" : {
              "allowed-protocol-mapper-types" : [
                "oidc-address-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-attribute-mapper",
                "saml-role-list-mapper",
                "oidc-full-name-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-property-mapper",
                "oidc-sha256-pairwise-sub-mapper"
              ]
            }
          },
          {
            "id" : "b36bc273-d933-4e6d-ae40-4f13a0def245",
            "name" : "Full Scope Disabled",
            "providerId" : "scope",
            "subType" : "anonymous",
            "subComponents" : {},
            "config" : {}
          },
          {
            "id" : "c809f59c-8816-4b43-afa9-89a8d9a52fea",
            "name" : "Consent Required",
            "providerId" : "consent-required",
            "subType" : "anonymous",
            "subComponents" : {},
            "config" : {}
          },
          {
            "id" : "b7d69ea8-7cbc-4091-8760-f9db26712dda",
            "name" : "Allowed Client Scopes",
            "providerId" : "allowed-client-templates",
            "subType" : "anonymous",
            "subComponents" : {},
            "config" : {
              "allow-default-scopes" : [
                "true"
              ]
            }
          },
          {
            "id" : "655aaaf5-5926-43ae-b9ff-5bc701dbf32b",
            "name" : "Allowed Protocol Mapper Types",
            "providerId" : "allowed-protocol-mappers",
            "subType" : "anonymous",
            "subComponents" : {},
            "config" : {
              "allowed-protocol-mapper-types" : [
                "oidc-usermodel-property-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-attribute-mapper",
                "saml-user-property-mapper",
                "saml-role-list-mapper",
                "oidc-address-mapper",
                "saml-user-attribute-mapper"
              ]
            }
          },
          {
            "id" : "22a8462e-dd56-48a5-ac20-db48ab742ffb",
            "name" : "Max Clients Limit",
            "providerId" : "max-clients",
            "subType" : "anonymous",
            "subComponents" : {},
            "config" : {
              "max-clients" : [
                "200"
              ]
            }
          },
          {
            "id" : "1d869207-bca0-42d4-8f02-2d6bbf64b40f",
            "name" : "Allowed Client Scopes",
            "providerId" : "allowed-client-templates",
            "subType" : "authenticated",
            "subComponents" : {},
            "config" : {
              "allow-default-scopes" : [
                "true"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider" : [
          {
            "id" : "d7e33885-5c29-4a37-993a-65ae67f7e59d",
            "name" : "rsa-generated",
            "providerId" : "rsa-generated",
            "subComponents" : {},
            "config" : {
              "priority" : [
                "100"
              ]
            }
          },
          {
            "id" : "02ed357b-13ab-4c5e-bbd5-d8f8fd16b7f4",
            "name" : "hmac-generated",
            "providerId" : "hmac-generated",
            "subComponents" : {},
            "config" : {
              "priority" : [
                "100"
              ],
              "algorithm" : [
                "HS256"
              ]
            }
          },
          {
            "id" : "16ee4375-0f23-4707-b212-41a431f1f7cd",
            "name" : "aes-generated",
            "providerId" : "aes-generated",
            "subComponents" : {},
            "config" : {
              "priority" : [
                "100"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [
        ""
      ],
      "authenticationFlows" : [
        {
          "id" : "ef34ddaa-238d-4e31-b0e3-8d2d62183587",
          "alias" : "Account verification options",
          "description" : "Method with which to verity the existing account",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "idp-email-verification",
              "requirement" : "ALTERNATIVE",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "ALTERNATIVE",
              "priority" : 20,
              "flowAlias" : "Verify Existing Account by Re-authentication",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "7dcdf19f-48b4-418f-ae8e-95cac07e87ef",
          "alias" : "Authentication Options",
          "description" : "Authentication options.",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "basic-auth",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "basic-auth-otp",
              "requirement" : "DISABLED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "auth-spnego",
              "requirement" : "DISABLED",
              "priority" : 30,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "0ac4b0c7-993a-493f-a394-8a0f453aba3e",
          "alias" : "Browser - Conditional OTP",
          "description" : "Flow to determine if the OTP is required for the authentication",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "conditional-user-configured",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "auth-otp-form",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "4a7213bc-09cf-4480-871c-4ab492f029c3",
          "alias" : "Direct Grant - Conditional OTP",
          "description" : "Flow to determine if the OTP is required for the authentication",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "conditional-user-configured",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "direct-grant-validate-otp",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "25e76a3c-c5bd-4415-a687-c57074ccfa44",
          "alias" : "First broker login - Conditional OTP",
          "description" : "Flow to determine if the OTP is required for the authentication",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "conditional-user-configured",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "auth-otp-form",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "a99d6096-2f5e-4250-b81c-1949ed2d9fe8",
          "alias" : "Handle Existing Account",
          "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "idp-confirm-link",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "REQUIRED",
              "priority" : 20,
              "flowAlias" : "Account verification options",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "dfc61e0a-1abd-4363-96e7-abdb540eee36",
          "alias" : "Reset - Conditional OTP",
          "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "conditional-user-configured",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "reset-otp",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "b4da9a68-51d3-4e07-b43f-3daf2f88c528",
          "alias" : "User creation or linking",
          "description" : "Flow for the existing/non-existing user alternatives",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticatorConfig" : "create unique user config",
              "authenticator" : "idp-create-user-if-unique",
              "requirement" : "ALTERNATIVE",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "ALTERNATIVE",
              "priority" : 20,
              "flowAlias" : "Handle Existing Account",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "2eb8813a-b837-4eb9-8c39-9b72ab682d4b",
          "alias" : "Verify Existing Account by Re-authentication",
          "description" : "Reauthentication of existing account",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "idp-username-password-form",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "CONDITIONAL",
              "priority" : 20,
              "flowAlias" : "First broker login - Conditional OTP",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "edfae070-1a42-471d-b61d-c826262a5b6f",
          "alias" : "browser",
          "description" : "browser based authentication",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "auth-cookie",
              "requirement" : "ALTERNATIVE",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "auth-spnego",
              "requirement" : "DISABLED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "identity-provider-redirector",
              "requirement" : "ALTERNATIVE",
              "priority" : 25,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "ALTERNATIVE",
              "priority" : 30,
              "flowAlias" : "forms",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "6cbba860-b0e0-4b12-a100-da193f267c2a",
          "alias" : "clients",
          "description" : "Base authentication for clients",
          "providerId" : "client-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "client-secret",
              "requirement" : "ALTERNATIVE",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "client-jwt",
              "requirement" : "ALTERNATIVE",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "client-secret-jwt",
              "requirement" : "ALTERNATIVE",
              "priority" : 30,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "client-x509",
              "requirement" : "ALTERNATIVE",
              "priority" : 40,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "b93561d5-0e0a-4fd5-b708-8bb87a080032",
          "alias" : "direct grant",
          "description" : "OpenID Connect Resource Owner Grant",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "direct-grant-validate-username",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "direct-grant-validate-password",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "CONDITIONAL",
              "priority" : 30,
              "flowAlias" : "Direct Grant - Conditional OTP",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "8decb61f-6a51-4c90-9c15-9484f78f398e",
          "alias" : "docker auth",
          "description" : "Used by Docker clients to authenticate against the IDP",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "docker-http-basic-authenticator",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "9d4a137b-6750-48e4-b4e4-ff559cc9bb8f",
          "alias" : "first broker login",
          "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticatorConfig" : "review profile config",
              "authenticator" : "idp-review-profile",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "REQUIRED",
              "priority" : 20,
              "flowAlias" : "User creation or linking",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "19eb9b2b-f5e0-424b-a97e-301d52e26128",
          "alias" : "forms",
          "description" : "Username, password, otp and other auth forms.",
          "providerId" : "basic-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "auth-username-password-form",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "CONDITIONAL",
              "priority" : 20,
              "flowAlias" : "Browser - Conditional OTP",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "172cc79f-0139-4fd1-8e2c-2e28ef19194e",
          "alias" : "http challenge",
          "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "no-cookie-redirect",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "REQUIRED",
              "priority" : 20,
              "flowAlias" : "Authentication Options",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "bf773eb8-9d11-4547-9bd2-c3ededab8338",
          "alias" : "registration",
          "description" : "registration flow",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "registration-page-form",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "flowAlias" : "registration form",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "847e5b57-010c-4a2c-bd42-80ae9af88967",
          "alias" : "registration form",
          "description" : "registration form",
          "providerId" : "form-flow",
          "topLevel" : false,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "registration-user-creation",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "registration-profile-action",
              "requirement" : "REQUIRED",
              "priority" : 40,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "registration-password-action",
              "requirement" : "REQUIRED",
              "priority" : 50,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "registration-recaptcha-action",
              "requirement" : "DISABLED",
              "priority" : 60,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        },
        {
          "id" : "269f92cc-bf98-46bd-b79f-da831ebae410",
          "alias" : "reset credentials",
          "description" : "Reset credentials for a user if they forgot their password or something",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "reset-credentials-choose-user",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "reset-credential-email",
              "requirement" : "REQUIRED",
              "priority" : 20,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "authenticator" : "reset-password",
              "requirement" : "REQUIRED",
              "priority" : 30,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            },
            {
              "requirement" : "CONDITIONAL",
              "priority" : 40,
              "flowAlias" : "Reset - Conditional OTP",
              "userSetupAllowed" : false,
              "autheticatorFlow" : true
            }
          ]
        },
        {
          "id" : "98b4c8d0-7135-4296-9a86-0a245dee7f33",
          "alias" : "saml ecp",
          "description" : "SAML ECP Profile Authentication Flow",
          "providerId" : "basic-flow",
          "topLevel" : true,
          "builtIn" : true,
          "authenticationExecutions" : [
            {
              "authenticator" : "http-basic-authenticator",
              "requirement" : "REQUIRED",
              "priority" : 10,
              "userSetupAllowed" : false,
              "autheticatorFlow" : false
            }
          ]
        }
      ],
      "authenticatorConfig" : [
        {
          "id" : "1da3762d-0aa2-4a5a-8ff5-503dda5bb3dc",
          "alias" : "create unique user config",
          "config" : {
            "require.password.update.after.registration" : "false"
          }
        },
        {
          "id" : "209b717a-46dd-43c3-9333-64b27769bf15",
          "alias" : "review profile config",
          "config" : {
            "update.profile.on.first.login" : "missing"
          }
        }
      ],
      "requiredActions" : [
        {
          "alias" : "CONFIGURE_TOTP",
          "name" : "Configure OTP",
          "providerId" : "CONFIGURE_TOTP",
          "enabled" : true,
          "defaultAction" : false,
          "priority" : 10,
          "config" : {}
        },
        {
          "alias" : "terms_and_conditions",
          "name" : "Terms and Conditions",
          "providerId" : "terms_and_conditions",
          "enabled" : false,
          "defaultAction" : false,
          "priority" : 20,
          "config" : {}
        },
        {
          "alias" : "UPDATE_PASSWORD",
          "name" : "Update Password",
          "providerId" : "UPDATE_PASSWORD",
          "enabled" : true,
          "defaultAction" : false,
          "priority" : 30,
          "config" : {}
        },
        {
          "alias" : "UPDATE_PROFILE",
          "name" : "Update Profile",
          "providerId" : "UPDATE_PROFILE",
          "enabled" : true,
          "defaultAction" : false,
          "priority" : 40,
          "config" : {}
        },
        {
          "alias" : "VERIFY_EMAIL",
          "name" : "Verify Email",
          "providerId" : "VERIFY_EMAIL",
          "enabled" : true,
          "defaultAction" : false,
          "priority" : 50,
          "config" : {}
        },
        {
          "alias" : "delete_account",
          "name" : "Delete Account",
          "providerId" : "delete_account",
          "enabled" : false,
          "defaultAction" : false,
          "priority" : 60,
          "config" : {}
        },
        {
          "alias" : "update_user_locale",
          "name" : "Update User Locale",
          "providerId" : "update_user_locale",
          "enabled" : true,
          "defaultAction" : false,
          "priority" : 1000,
          "config" : {}
        }
      ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "attributes" : {},
      "keycloakVersion" : "12.0.4",
      "userManagedAccessAllowed" : false
    }